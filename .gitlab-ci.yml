---
image: docker:stable
services:
    - docker:stable-dind

variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    REVAPP_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-review
    CI_CACHE_IMAGE_FILE: ella-ci-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID.tar
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
    BRANCH: $CI_COMMIT_REF_NAME
    PIPELINE_ID: ella-$CI_PIPELINE_ID
    BUILD_OPTIONS: --build-arg BUILDKIT_INLINE_CACHE=1

stages:
    - build
    - formatting
    - test
    - review
    - release

# shared settings
.cache: &cache
    key: 'ella-$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID'
    paths:
        - images/

.cache-pull: &cache-pull
    <<: *cache
    policy: pull

.cache-push: &cache-push
    <<: *cache
    policy: push

# before_script actions
.apk-setup: &apk-setup apk add --update make
.docker-login: &docker-login docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
.docker-load: &docker-load cat images/$CI_CACHE_IMAGE_FILE | docker load

# base jobs
.revapp: &revapp
    stage: review
    before_script:
        - *apk-setup
        - *docker-login
        - docker pull $REVAPP_IMAGE_NAME || true
    variables:
        REVAPP_REPLACE: 1
        REVAPP_NAME: $CI_BUILD_REF_SLUG
        REVAPP_IMAGE_TAR: images/ella-review-$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID.tar
        REVAPP_ENV_NAME: review/$CI_BUILD_REF_SLUG

.common-test: &common-test
    stage: test
    before_script:
        - *apk-setup
        - *docker-load
    needs: ['build']
    cache:
        <<: *cache-pull
    tags:
        - do-small
    except:
        - /^ui-.*$/
        - /^ops-.*$/

# jobs

.build:
    stage: build
    before_script:
        - *docker-login
    script:
        - docker pull $CI_REGISTRY_IMAGE:ci-latest || true
        - docker build $BUILD_OPTIONS --cache-from $CI_REGISTRY_IMAGE:ci-latest -t $CI_REGISTRY_IMAGE:ci-latest -t $IMAGE_NAME -t ella:ci-latest --target dev .
        - docker build $BUILD_OPTIONS -t $REVAPP_IMAGE_NAME .
        - docker push $CI_REGISTRY_IMAGE:ci-latest
        - docker push $REVAPP_IMAGE_NAME
        - mkdir -p images
        - docker save $IMAGE_NAME > images/$CI_CACHE_IMAGE_FILE
    tags:
        - do-large
    cache:
        <<: *cache-push

start_review:
    extends: .revapp
    script:
        - make gitlab-review
    artifacts:
        reports:
            dotenv: deploy.env
    environment:
        name: $REVAPP_ENV_NAME
        url: http://$APP_IP
        on_stop: stop_review
        auto_stop_in: 6 hours
    only:
        - branches
    except:
        - master

stop_review:
    extends: .revapp
    script:
        - make gitlab-review-stop
    when: manual
    environment:
        name: $REVAPP_ENV_NAME
        action: stop

###

.check_formatting:
    extends: .common-test
    stage: formatting
    script:
        - make test-formatting

.e2e:
    extends: .common-test
    script:
        - PARALLEL_INSTANCES=2 make test-e2e
    artifacts:
        paths:
            - errorShots/
            - logs/
        name: ella-e2e-errors-${CI_BUILD_REF_SLUG}
        when: on_failure
        expire_in: 2 weeks
    cache:
        <<: *cache-pull

.api:
    extends: .common-test
    script:
        - make test-api

.api_migration:
    extends: .common-test
    script:
        - make test-api-migration

.js:
    extends: .common-test
    script:
        - make test-js

.python:
    extends: .common-test
    script:
        - make test-python

.cli:
    extends: .common-test
    script:
        - make test-cli

.report:
    extends: .common-test
    script:
        - make test-report

release:
    stage: release
    before_script:
        - *apk-setup
        - *docker-login
    script:
        - RELEASE_TAG=$CI_COMMIT_REF_NAME make bundle-dist
        - docker build -t $IMAGE_NAME .
        - docker push $IMAGE_NAME
    artifacts:
        paths:
            - ella-release-$CI_COMMIT_REF_NAME-dist.tgz
        name: ella-release-$CI_COMMIT_REF_NAME
        when: on_success
    only:
        - tags
    tags:
        - do-large
