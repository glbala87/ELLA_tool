"""cleanup customannotation

Revision ID: 4046ee04dd46
Revises: d394766ada41
Create Date: 2021-08-26 11:59:02.611145

"""

# revision identifiers, used by Alembic.
revision = "4046ee04dd46"
down_revision = "d394766ada41"
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


from sqlalchemy.sql import table, column

# from sqlalchemy.dialects import postgresql
from sqlalchemy.dialects.postgresql import JSONB
from sqlalchemy.orm.session import Session
from api.config import config
from vardb.datamodel.jsonschemas.update_schemas import update_schemas
from vardb.datamodel.annotationshadow import create_trigger_sql
from api.config.customannotationconfig import customannotationconfig
import copy

customAnnotationTbl = table(
    "customannotation", column("id", sa.Integer), column("annotations", JSONB)
)


def upgrade():
    conn = op.get_bind()
    session = Session(bind=conn)

    annotations = conn.execution_options(stream_results=True).execute(
        sa.select([customAnnotationTbl.c.id, customAnnotationTbl.c.annotations])
    )
    for row in annotations:
        # edit only copy - keep org
        a_mod = copy.deepcopy(row.annotations)
        # loop over keys of annotation
        for a_grp_k in a_mod.keys():
            # check if key exists in customannotationconfig
            if a_grp_k not in customannotationconfig.keys():
                # "references" entry will go here
                continue
            # use only sub_keys that are found as sub_keys in customannotationconfig
            valid_keys = [e["key"] for e in customannotationconfig[a_grp_k]]
            a_mod[a_grp_k] = {k: v for k, v in a_mod[a_grp_k].items() if k in valid_keys}
        # has annotation changed
        if a_mod != row.annotations:
            conn.execute(
                sa.update(customAnnotationTbl)
                .where(customAnnotationTbl.c.id == row.id)
                .values({"annotations": a_mod})
            )
    session.commit()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
